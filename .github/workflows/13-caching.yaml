name: 13 - Using Caching
on:
    workflow_dispatch:
        inputs:
            use-cache:
                type: boolean
                description: 'Whether to execute cache step'
                default: false
            node-version:
                type: choice
                description: "node version of choice"
                options:
                    - 18.x
                    - 20.x
                    - 21.x
                default: 20.x

jobs:
    install-deps:
        runs-on: ubuntu-latest
        outputs:
            deps-cache-key: ${{ steps.cache-key.outputs.CACHE_KEY }}
        defaults:
            run:
                working-directory: 13-caching/react-app
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                node-version: ${{ github.event.inputs.node-version }}
            - id: cache-key
              run: echo "CACHE_KEY=deps-node-modules-${{ hashFiles('package-lock.json') }}" >> "$GITHUB_OUTPUT"
            - name: Restore cache
              id: cache
              uses: actions/cache@v3
              with:
                path: 13-caching/react-app/node_modules
                key: deps-node-modules-${{ steps.cache-key.outputs.CACHE_KEY }}
            - run: npm ci
              if: steps.cache.outputs.cache-hit != 'true'
    build:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: 13-caching/react-app
        needs:
            - install-deps
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ github.event.inputs.node-version }}
            - name: Download cached
              id: cache
              uses: actions/cache@v3
              with:
                path: 13-caching/react-app/node_modules
                key: ${{ needs.install-deps.outputs.deps-cache-key }}
            - name: Install
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm ci
            - name: Testing
              run: npm run test
            - name: Building
              run: npm run build
            - name: Deploying
              run: echo "Deploying to nonprod"
    